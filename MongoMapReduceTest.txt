start mongo with logging
mongod.exe --logpath D:\Mongo\logs\log.txt


100161217377	3/1/2015	A
100161217377	6/1/2015	A
100161217377	9/1/2015	A
100161217377	12/1/2015	A
100161217377	3/1/2016	A
100161217377	6/1/2016	A
100161217377	9/1/2016	A
100161217377	12/1/2016	A
100161217377	3/1/2017	B
100161217377	6/1/2017	A
100161217377	9/1/2017	A
100161217377	12/1/2017	A

100184875206	3/1/2015	A
100184875206	6/1/2015	A
100184875206	9/1/2015	A
100184875206	12/1/2015	A
100184875206	3/1/2016	B
100184875206	6/1/2016	C

100254873222	3/1/2015	A
100254873222	6/1/2015	A
100254873222	9/1/2015	A
100254873222	12/1/2015	A
100254873222	3/1/2016	A
100254873222	6/1/2016	A
100254873222	9/1/2016	A
100254873222	12/1/2016	A
100254873222	3/1/2017	A
100254873222	6/1/2017	B
100254873222	9/1/2017	B
100254873222	12/1/2017	B
100254873222	3/1/2018	A
100254873222	6/1/2018	A
100254873222	9/1/2018	A
100254873222	12/1/2018	A

100404088327	3/1/2015	A
100404088327	6/1/2015	A
100404088327	9/1/2015	A
100404088327	12/1/2015	A
100404088327	3/1/2016	A
100404088327	6/1/2016	A
100404088327	9/1/2016	C
100404088327	12/1/2016	B
100404088327	3/1/2017	A
100404088327	6/1/2017	A
100404088327	9/1/2017	C
100404088327	12/1/2017	A
100404088327	3/1/2018	A
100404088327	6/1/2018	A
100404088327	9/1/2018	A
100404088327	12/1/2018	A


db.performance.insert("LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(3, 1, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A")
		
		3/1/2015	A
		
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"B"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100161217377, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100184875206, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100184875206, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100184875206, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100184875206, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100184875206, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"B"})
db.performance.insert({"LOAN_IDENTIFIER":100184875206, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"C"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"B"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"B"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"B"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100254873222, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2015), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"C"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2016), "CURRENT_LOAN_DELINQUENCY_STATUS":"B"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"C"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2017), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 3, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 6, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 9, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})
db.performance.insert({"LOAN_IDENTIFIER":100404088327, "MONTHLY_REPORTING_PERIOD": new Date(1, 12, 2018), "CURRENT_LOAN_DELINQUENCY_STATUS":"A"})


var mapFunction1 = function() {
	emit(this.LOAN_IDENTIFIER, {MONTHLY_REPORTING_PERIOD: this.MONTHLY_REPORTING_PERIOD, CURRENT_LOAN_DELINQUENCY_STATUS: this.CURRENT_LOAN_DELINQUENCY_STATUS});
};


var reduceFunction1 = function(loan, loanDtl) {
	var bkt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
	loanDtl.sort();
	var prev = "Z";
	var curr = "Z";
	var tm = new Array(8);
	var i=0; 
	var j=0;
	
	for (i=0; i<8; i++){ tm[i]=new Array(8);}
	for (i=0; i<8; i++){ for (j=0; j<8; j++){  tm[i][j] = 0; } }
	for (var idx = 0; idx < loanDtl.length; idx++) {
		if(prev == "Z"){
			prev = loanDtl[idx].CURRENT_LOAN_DELINQUENCY_STATUS;
			continue;
		}
		curr = loanDtl[idx].CURRENT_LOAN_DELINQUENCY_STATUS;
		
		var rIndex = bkt.indexOf(prev);
		var cIndex = bkt.indexOf(curr);
		
		if(rIndex != -1 && cIndex != -1){
			tm[rIndex][cIndex] ++;
		}
		
		prev = curr;
	}
	return ({LOAN_IDENTIFIER: loan, tm: tm});
	
};



db.performance.mapReduce(
	mapFunction1,
	reduceFunction1,
	{ out: "performance_out" }
)

db.performance_out.find()

------------

below code is to consolidate the results and generate transition matrix


var perf = 0;

var perfMatrix = new Array(8);
var i=0; 
var j=0;

for (i=0; i<8; i++){ perfMatrix[i]=new Array(8);}
for (i=0; i<8; i++){ for (j=0; j<8; j++){  perfMatrix[i][j] = 0; } }
	
	
db.performance_out.find().forEach( function(record) { 
		for (i=0; i<8; i++){ 
			for (j=0; j<8; j++){  
				try {
				perfMatrix[i][j] += record.value.tm[i][j]; 
				}catch(err) {
					print("error on "+record._id);
				}
			} 
		}
	} 
);


for (i=0; i<8; i++){ 
	for (j=0; j<8; j++){  
		print(perfMatrix[i][j]); 
	} 
}



-------------------

attempt 3
java code
Path path = FileSystems.getDefault().getPath( "D:\\temp", "perf1.psv" ); // reading Performance_2000Q2.txt took 127560 ms
        Files.lines( path ).forEach( line -> {
            try {
                List<String> lst = Splitter.on( '|' ).trimResults().splitToList( line );

                String loan = lst.get( 0 );
                String period = lst.get( 1 );
                int stts = 0;
                try {
                    stts = Integer.parseInt( lst.get( 10 ) );
                } catch( NumberFormatException ex1 ) {
                }
                           
                LocalDate tempLd = toDate( period );
                String s_bkt = "F";
                try {
                     s_bkt = buckets.charAt( stts )+"";
                } catch( Exception ex ) {
                }
                
                DBObject findQuery = new BasicDBObject("_id", loan);
                
                DBObject listItem = new BasicDBObject("loanData", new BasicDBObject("reportingPeriod", tempLd).append("status", s_bkt));
                DBObject updateQuery = new BasicDBObject("$push", listItem);
                table.update(findQuery, updateQuery, true, true);
            } catch( Exception ex ) {
                ex.printStackTrace();
            }

            
        } );
        
        
data
{ "_id" : "100004032510", "loanData" : [ { "reportingPeriod" : ISODate("2000-01-06T00:00:00Z"), "status" : "B" }, { "reportingPeriod" : ISODate("2000-01-05T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-10T00:00:00Z"), "status" : "D" }, { "reportingPeriod" : ISODate("2000-01-07T00:00:00Z"), "status" : "B" }, { "reportingPeriod" : ISODate("2000-01-08T00:00:00Z"), "status" : "C" }, { "reportingPeriod" : ISODate("2000-01-09T00:00:00Z"), "status" : "C" }, { "reportingPeriod" : ISODate("2000-01-11T00:00:00Z"), "status" : "E" }, { "reportingPeriod" : ISODate("2000-01-12T00:00:00Z"), "status" : "E" }, { "reportingPeriod" : ISODate("2001-01-03T00:00:00Z"), "status" : "C" }, { "reportingPeriod" : ISODate("2001-01-01T00:00:00Z"), "status" : "B" }, { "reportingPeriod" : ISODate("2001-01-02T00:00:00Z"), "status" : "B" } ] }
{ "_id" : "100004547910", "loanData" : [ { "reportingPeriod" : ISODate("2000-01-11T00:00:00Z"), "status" : "D" }, { "reportingPeriod" : ISODate("2000-01-05T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-07T00:00:00Z"), "status" : "B" }, { "reportingPeriod" : ISODate("2000-01-06T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-08T00:00:00Z"), "status" : "B" }, { "reportingPeriod" : ISODate("2000-01-12T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-09T00:00:00Z"), "status" : "C" }, { "reportingPeriod" : ISODate("2000-01-10T00:00:00Z"), "status" : "C" }, { "reportingPeriod" : ISODate("2001-01-01T00:00:00Z"), "status" : "A" } ] }
{ "_id" : "100008709521", "loanData" : [ { "reportingPeriod" : ISODate("2000-01-09T00:00:00Z"), "status" : "E" }, { "reportingPeriod" : ISODate("2000-01-10T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-05T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-06T00:00:00Z"), "status" : "B" }, { "reportingPeriod" : ISODate("2000-01-12T00:00:00Z"), "status" : "A" }, { "reportingPeriod" : ISODate("2000-01-07T00:00:00Z"), "status" : "C" }, { "reportingPeriod" : ISODate("2000-01-08T00:00:00Z"), "status" : "D" }, { "reportingPeriod" : ISODate("2000-01-11T00:00:00Z"), "status" : "A" } ] }


var tm = new Array(8);

for (var i = 0; i < tm.length; i++) {
  tm[i] = new Array(8);
}

for (var i = 0; i < 8; i++) {
for (var j = 0; j < 8; j++) {
  tm[i][j] = 0;
}
}


db.performance.distinct("_id").forEach(function(eachLoan){ 
db.performance.find({_id: eachLoan}).forEach(function(eachRec){
	
	for(var c=0; c<eachRec.loanData.length; c++){
		print(eachRec.loanData[c].status);
	}
});
});
